const express=require('express');
const app = express();
const PORT=3000;

//Middleware to parse Json bodies

app.use(express.json());


let users=[{id: '1',name: 'John'},
    {id: '2',name: 'Jack'}
];

// fetching all users

app.get('/users',(req, res) => {
    
    res.json(users)

}

);


//get users by id

 app.get('/users/:id',(req, res) => {

const userId=req.params.id;

const user=users.find(user=>user.id===userId);

res.json(user);




});

//this api delete user based on id

app.delete('/users/:id',(req, res)=>{

    const userId=req.params.id;

    const index=users.findIndex(user=>user.id===userId);

    const user = users.find(user=>user.id===userId);

    if(index<0){

      return  res.status(404).json({message: 'invalid index'})
    }
     users.splice(index, 1);
    res.status(204).send(user);


});


//testing

app.get('/test',(req, res) => {console.log("testing done");})


//this api post new user

app.post('/users',(req,res)=>{


const newUser =req.body;

users.push(newUser);
res.status(201).send();

});

// THIS API UPDATES USER BASED ON ID
app.put('/users/:id',(req,res)=>{

    const userId =req.params.id;

const newUser =req.body;

const user=users.find(user=>user.id==userId);


user.name = req.body.name;



res.json(user);

})


//starting servers

app.listen(PORT,()=>{console.log("server started")});